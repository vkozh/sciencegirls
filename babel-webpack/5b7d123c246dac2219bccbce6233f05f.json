{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, PLATFORM_ID, Directive, Input, Output, Self, Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { from, of, animationFrameScheduler, Subject, BehaviorSubject, defer, Observable } from 'rxjs';\nimport { map, publishReplay, refCount, observeOn, filter, switchMap, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\nimport { makeStateKey } from '@angular/platform-browser';\nconst _c0 = [\"container\"];\nconst LOTTIE_OPTIONS = new InjectionToken('LottieOptions');\n\nfunction convertPlayerOrLoaderToObservable(player) {\n  const playerOrLoader = player();\n\n  if (playerOrLoader instanceof Promise) {\n    return from(playerOrLoader).pipe(map(module => module.default || module), publishReplay(1), refCount());\n  } else {\n    return of(playerOrLoader);\n  }\n}\n\nclass AnimationLoader {\n  constructor(ngZone, options) {\n    this.ngZone = ngZone;\n    this.options = options;\n    this.player$ = convertPlayerOrLoaderToObservable(this.options.player).pipe(observeOn(animationFrameScheduler));\n  }\n\n  loadAnimation(options) {\n    return this.player$.pipe(map(player => this.createAnimationItem(player, options)));\n  }\n\n  resolveOptions(options, container) {\n    return Object.assign({\n      container,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true\n    }, options);\n  }\n\n  createAnimationItem(player, options) {\n    return this.ngZone.runOutsideAngular(() => player.loadAnimation(options));\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nAnimationLoader.ɵfac = function AnimationLoader_Factory(t) {\n  return new (t || AnimationLoader)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(LOTTIE_OPTIONS));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nAnimationLoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AnimationLoader,\n  factory: AnimationLoader.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnimationLoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOTTIE_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n\nclass BaseDirective {\n  constructor(ngZone, platformId, animationLoader) {\n    this.ngZone = ngZone;\n    this.platformId = platformId;\n    this.animationLoader = animationLoader;\n    this.options = null;\n    this.containerClass = null;\n    this.styles = null;\n    /**\n     * `animationCreated` is dispatched after calling `loadAnimation`.\n     */\n\n    this.animationCreated = this.getAnimationItem();\n    /**\n     * `complete` is dispatched after completing the last frame.\n     */\n\n    this.complete = this.awaitAnimationItemAndStartListening('complete');\n    /**\n     * `loopComplete` is dispatched after completing the frame loop.\n     */\n\n    this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');\n    /**\n     * `enterFrame` is dispatched after entering the new frame.\n     */\n\n    this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');\n    /**\n     * `segmentStart` is dispatched when the new segment is adjusted.\n     */\n\n    this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');\n    /**\n     * Original event name is `config_ready`. `config_ready` is dispatched\n     * after the needed renderer is configured.\n     */\n\n    this.configReady = this.awaitAnimationItemAndStartListening('config_ready');\n    /**\n     * Original event name is `data_ready`. `data_ready` is dispatched\n     * when all parts of the animation have been loaded.\n     */\n\n    this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');\n    /**\n     * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n     * when elements have been added to the DOM.\n     */\n\n    this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');\n    /**\n     * `destroy` will be dispatched when the component gets destroyed,\n     * it's handy for releasing resources.\n     */\n\n    this.destroy = this.awaitAnimationItemAndStartListening('destroy');\n    /**\n     * `error` will be dispatched if the Lottie player could not render\n     * some frame or parse config.\n     */\n\n    this.error = this.awaitAnimationItemAndStartListening('error');\n    this.destroy$ = new Subject();\n    this.loadAnimation$ = new Subject();\n    this.animationItem$ = new BehaviorSubject(null);\n    this.setupLoadAnimationListener();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroyAnimation();\n  }\n\n  loadAnimation(changes, container) {\n    this.loadAnimation$.next([changes, container]);\n  }\n\n  getAnimationItem() {\n    return defer(() => this.animationItem$).pipe(filter(animationItem => animationItem !== null));\n  }\n\n  awaitAnimationItemAndStartListening(name) {\n    return this.getAnimationItem().pipe(switchMap(animationItem => // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.\n    // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from\n    // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`\n    // removes event listeners when calling `destroy()`.\n    new Observable(observer => {\n      animationItem.addEventListener(name, event => {\n        this.ngZone.runOutsideAngular(() => {\n          observer.next(event);\n        });\n      });\n    })));\n  }\n\n  setupLoadAnimationListener() {\n    this.loadAnimation$.pipe(filter(([changes]) => isPlatformBrowser(this.platformId) && changes.options !== undefined), switchMap(([changes, container]) => {\n      this.destroyAnimation();\n      return this.animationLoader.loadAnimation(this.animationLoader.resolveOptions(changes.options.currentValue, container));\n    }), takeUntil(this.destroy$)).subscribe(animationItem => {\n      this.animationItem$.next(animationItem);\n    });\n  }\n\n  destroyAnimation() {\n    const animationItem = this.animationItem$.getValue(); // The `ng-lottie` component or the `lottie` directive can be destroyed\n    // before the `animationItem` is set, thus it will fail with\n    // `Cannot read property 'destroy' of null`.\n    // Potentially it can happen if the directive gets destroyed before change\n    // detection is run.\n\n    if (animationItem === null) {\n      return;\n    } // `destroy()` will remove all events listeners.\n\n\n    animationItem.destroy();\n    this.animationItem$.next(null);\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nBaseDirective.ɵfac = function BaseDirective_Factory(t) {\n  return new (t || BaseDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(AnimationLoader));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nBaseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BaseDirective,\n  selectors: [[\"\", \"lottie\", \"\"]],\n  inputs: {\n    options: \"options\",\n    containerClass: \"containerClass\",\n    styles: \"styles\"\n  },\n  outputs: {\n    animationCreated: \"animationCreated\",\n    complete: \"complete\",\n    loopComplete: \"loopComplete\",\n    enterFrame: \"enterFrame\",\n    segmentStart: \"segmentStart\",\n    configReady: \"configReady\",\n    dataReady: \"dataReady\",\n    domLoaded: \"domLoaded\",\n    destroy: \"destroy\",\n    error: \"error\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lottie]'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: AnimationLoader\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    animationCreated: [{\n      type: Output\n    }],\n    complete: [{\n      type: Output\n    }],\n    loopComplete: [{\n      type: Output\n    }],\n    enterFrame: [{\n      type: Output\n    }],\n    segmentStart: [{\n      type: Output\n    }],\n    configReady: [{\n      type: Output\n    }],\n    dataReady: [{\n      type: Output\n    }],\n    domLoaded: [{\n      type: Output\n    }],\n    destroy: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }]\n  });\n})();\n\nclass LottieDirective extends BaseDirective {\n  constructor(ngZone, platformId, host, animationLoader) {\n    super(ngZone, platformId, animationLoader);\n    this.host = host;\n  }\n\n  ngOnChanges(changes) {\n    super.loadAnimation(changes, this.host.nativeElement);\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieDirective.ɵfac = function LottieDirective_Factory(t) {\n  return new (t || LottieDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef, 2), i0.ɵɵdirectiveInject(AnimationLoader));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LottieDirective,\n  selectors: [[\"\", \"lottie\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lottie]'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Self\n      }]\n    }, {\n      type: AnimationLoader\n    }];\n  }, null);\n})();\n\nclass LottieComponent extends BaseDirective {\n  constructor(ngZone, platformId, animationLoader) {\n    super(ngZone, platformId, animationLoader);\n    this.width = null;\n    this.height = null;\n    this.container = null;\n  }\n\n  ngOnChanges(changes) {\n    super.loadAnimation(changes, this.container.nativeElement);\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieComponent.ɵfac = function LottieComponent_Factory(t) {\n  return new (t || LottieComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(AnimationLoader));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LottieComponent,\n  selectors: [[\"ng-lottie\"]],\n  viewQuery: function LottieComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n    }\n  },\n  inputs: {\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"ngStyle\", \"ngClass\"], [\"container\", \"\"]],\n  template: function LottieComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width || \"100%\")(\"height\", ctx.height || \"100%\");\n      i0.ɵɵproperty(\"ngStyle\", ctx.styles)(\"ngClass\", ctx.containerClass);\n    }\n  },\n  directives: [i2.NgStyle, i2.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-lottie',\n      template: `\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: AnimationLoader\n    }];\n  }, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass LottieModule {\n  static forRoot(options) {\n    return {\n      ngModule: LottieModule,\n      providers: [AnimationLoader, {\n        provide: LOTTIE_OPTIONS,\n        useValue: options\n      }]\n    };\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieModule.ɵfac = function LottieModule_Factory(t) {\n  return new (t || LottieModule)();\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LottieModule\n});\n/** @nocollapse */\n\n/** @nocollapse */\n\nLottieModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [BaseDirective, LottieDirective, LottieComponent],\n      exports: [BaseDirective, LottieDirective, LottieComponent]\n    }]\n  }], null, null);\n})();\n\nclass CacheableAnimationLoader extends AnimationLoader {\n  constructor() {\n    super(...arguments);\n    this.cache = new Map();\n  }\n\n  ngOnDestroy() {\n    this.cache.clear();\n  }\n\n  loadAnimation(options) {\n    return this.player$.pipe(map(player => {\n      const animationItem = this.createAnimationItem(player, this.transformOptions(options));\n      this.awaitConfigAndCache(options, animationItem);\n      return animationItem;\n    }));\n  }\n\n  awaitConfigAndCache(options, animationItem) {\n    if (this.isAnimationConfigWithPath(options)) {\n      // Don't wait for the `config_ready` event if it has been cached previously.\n      if (this.cache.has(options.path)) {\n        return;\n      }\n\n      animationItem.addEventListener('config_ready', () => {\n        // See the comments below on why we're storing the animation data as a string.\n        this.cache.set(options.path, JSON.stringify(animationItem['animationData']));\n      });\n    }\n  }\n\n  transformOptions(options) {\n    if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {\n      return Object.assign(Object.assign({}, options), {\n        path: undefined,\n        // Caretaker note: `lottie-web` cannot re-use the `animationData` object between animations, and we\n        // have to retrieve a new object each time an animation is created.\n        // https://github.com/airbnb/lottie-web#html\n        // See comments for the `animationData` property.\n        animationData: JSON.parse(this.cache.get(options.path))\n      });\n    } else {\n      return options;\n    }\n  }\n\n  isAnimationConfigWithPath(options) {\n    return typeof options.path === 'string';\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nCacheableAnimationLoader.ɵfac = /* @__PURE__ */function () {\n  let ɵCacheableAnimationLoader_BaseFactory;\n  return function CacheableAnimationLoader_Factory(t) {\n    return (ɵCacheableAnimationLoader_BaseFactory || (ɵCacheableAnimationLoader_BaseFactory = i0.ɵɵgetInheritedFactory(CacheableAnimationLoader)))(t || CacheableAnimationLoader);\n  };\n}();\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nCacheableAnimationLoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CacheableAnimationLoader,\n  factory: CacheableAnimationLoader.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CacheableAnimationLoader, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass LottieCacheModule {\n  static forRoot() {\n    return {\n      ngModule: LottieCacheModule,\n      providers: [{\n        provide: AnimationLoader,\n        useClass: CacheableAnimationLoader\n      }]\n    };\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieCacheModule.ɵfac = function LottieCacheModule_Factory(t) {\n  return new (t || LottieCacheModule)();\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieCacheModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LottieCacheModule\n});\n/** @nocollapse */\n\n/** @nocollapse */\n\nLottieCacheModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieCacheModule, [{\n    type: NgModule\n  }], null, null);\n})();\n\nfunction transformAnimationFilenameToKey(animation) {\n  const [animationName] = animation.split('.json');\n  return `animation-${animationName}`;\n}\n\nclass LottieTransferState {\n  constructor(transferState) {\n    this.transferState = transferState;\n  }\n\n  get(animation) {\n    const animationKey = transformAnimationFilenameToKey(animation);\n    const stateKey = makeStateKey(animationKey);\n    return this.transferState.get(stateKey, null);\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieTransferState.ɵfac = function LottieTransferState_Factory(t) {\n  return new (t || LottieTransferState)(i0.ɵɵinject(i1.TransferState));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nLottieTransferState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LottieTransferState,\n  factory: LottieTransferState.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieTransferState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.TransferState\n    }];\n  }, null);\n})();\n/**\n * The public api for consumers of ngx-lottie\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AnimationLoader, BaseDirective, LottieCacheModule, LottieComponent, LottieDirective, LottieModule, LottieTransferState, transformAnimationFilenameToKey };","map":{"version":3,"sources":["C:/Users/lerik/Documents/science-girls/science-girls/node_modules/ngx-lottie/fesm2015/ngx-lottie.mjs"],"names":["i0","InjectionToken","Injectable","Inject","PLATFORM_ID","Directive","Input","Output","Self","Component","ChangeDetectionStrategy","ViewChild","NgModule","i2","isPlatformBrowser","CommonModule","from","of","animationFrameScheduler","Subject","BehaviorSubject","defer","Observable","map","publishReplay","refCount","observeOn","filter","switchMap","takeUntil","i1","makeStateKey","LOTTIE_OPTIONS","convertPlayerOrLoaderToObservable","player","playerOrLoader","Promise","pipe","module","default","AnimationLoader","constructor","ngZone","options","player$","loadAnimation","createAnimationItem","resolveOptions","container","Object","assign","renderer","loop","autoplay","runOutsideAngular","ɵfac","NgZone","ɵprov","type","undefined","decorators","args","BaseDirective","platformId","animationLoader","containerClass","styles","animationCreated","getAnimationItem","complete","awaitAnimationItemAndStartListening","loopComplete","enterFrame","segmentStart","configReady","dataReady","domLoaded","destroy","error","destroy$","loadAnimation$","animationItem$","setupLoadAnimationListener","ngOnDestroy","next","destroyAnimation","changes","animationItem","name","observer","addEventListener","event","currentValue","subscribe","getValue","ɵdir","selector","LottieDirective","host","ngOnChanges","nativeElement","ElementRef","LottieComponent","width","height","ɵcmp","NgStyle","NgClass","template","changeDetection","OnPush","static","LottieModule","forRoot","ngModule","providers","provide","useValue","ɵmod","ɵinj","imports","declarations","exports","CacheableAnimationLoader","arguments","cache","Map","clear","transformOptions","awaitConfigAndCache","isAnimationConfigWithPath","has","path","set","JSON","stringify","animationData","parse","get","LottieCacheModule","useClass","transformAnimationFilenameToKey","animation","animationName","split","LottieTransferState","transferState","animationKey","stateKey","TransferState","providedIn"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, PLATFORM_ID, Directive, Input, Output, Self, Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { from, of, animationFrameScheduler, Subject, BehaviorSubject, defer, Observable } from 'rxjs';\nimport { map, publishReplay, refCount, observeOn, filter, switchMap, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\nimport { makeStateKey } from '@angular/platform-browser';\n\nconst LOTTIE_OPTIONS = new InjectionToken('LottieOptions');\n\nfunction convertPlayerOrLoaderToObservable(player) {\n    const playerOrLoader = player();\n    if (playerOrLoader instanceof Promise) {\n        return from(playerOrLoader).pipe(map(module => module.default || module), publishReplay(1), refCount());\n    }\n    else {\n        return of(playerOrLoader);\n    }\n}\nclass AnimationLoader {\n    constructor(ngZone, options) {\n        this.ngZone = ngZone;\n        this.options = options;\n        this.player$ = convertPlayerOrLoaderToObservable(this.options.player).pipe(observeOn(animationFrameScheduler));\n    }\n    loadAnimation(options) {\n        return this.player$.pipe(map(player => this.createAnimationItem(player, options)));\n    }\n    resolveOptions(options, container) {\n        return Object.assign({\n            container,\n            renderer: 'svg',\n            loop: true,\n            autoplay: true,\n        }, options);\n    }\n    createAnimationItem(player, options) {\n        return this.ngZone.runOutsideAngular(() => player.loadAnimation(options));\n    }\n}\n/** @nocollapse */ /** @nocollapse */ AnimationLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: AnimationLoader, deps: [{ token: i0.NgZone }, { token: LOTTIE_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ AnimationLoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: AnimationLoader });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: AnimationLoader, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [LOTTIE_OPTIONS]\n                    }] }];\n    } });\n\nclass BaseDirective {\n    constructor(ngZone, platformId, animationLoader) {\n        this.ngZone = ngZone;\n        this.platformId = platformId;\n        this.animationLoader = animationLoader;\n        this.options = null;\n        this.containerClass = null;\n        this.styles = null;\n        /**\n         * `animationCreated` is dispatched after calling `loadAnimation`.\n         */\n        this.animationCreated = this.getAnimationItem();\n        /**\n         * `complete` is dispatched after completing the last frame.\n         */\n        this.complete = this.awaitAnimationItemAndStartListening('complete');\n        /**\n         * `loopComplete` is dispatched after completing the frame loop.\n         */\n        this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');\n        /**\n         * `enterFrame` is dispatched after entering the new frame.\n         */\n        this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');\n        /**\n         * `segmentStart` is dispatched when the new segment is adjusted.\n         */\n        this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');\n        /**\n         * Original event name is `config_ready`. `config_ready` is dispatched\n         * after the needed renderer is configured.\n         */\n        this.configReady = this.awaitAnimationItemAndStartListening('config_ready');\n        /**\n         * Original event name is `data_ready`. `data_ready` is dispatched\n         * when all parts of the animation have been loaded.\n         */\n        this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');\n        /**\n         * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n         * when elements have been added to the DOM.\n         */\n        this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');\n        /**\n         * `destroy` will be dispatched when the component gets destroyed,\n         * it's handy for releasing resources.\n         */\n        this.destroy = this.awaitAnimationItemAndStartListening('destroy');\n        /**\n         * `error` will be dispatched if the Lottie player could not render\n         * some frame or parse config.\n         */\n        this.error = this.awaitAnimationItemAndStartListening('error');\n        this.destroy$ = new Subject();\n        this.loadAnimation$ = new Subject();\n        this.animationItem$ = new BehaviorSubject(null);\n        this.setupLoadAnimationListener();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroyAnimation();\n    }\n    loadAnimation(changes, container) {\n        this.loadAnimation$.next([changes, container]);\n    }\n    getAnimationItem() {\n        return defer(() => this.animationItem$).pipe(filter((animationItem) => animationItem !== null));\n    }\n    awaitAnimationItemAndStartListening(name) {\n        return this.getAnimationItem().pipe(switchMap(animationItem => \n        // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.\n        // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from\n        // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`\n        // removes event listeners when calling `destroy()`.\n        new Observable(observer => {\n            animationItem.addEventListener(name, event => {\n                this.ngZone.runOutsideAngular(() => {\n                    observer.next(event);\n                });\n            });\n        })));\n    }\n    setupLoadAnimationListener() {\n        this.loadAnimation$\n            .pipe(filter(([changes]) => isPlatformBrowser(this.platformId) && changes.options !== undefined), switchMap(([changes, container]) => {\n            this.destroyAnimation();\n            return this.animationLoader.loadAnimation(this.animationLoader.resolveOptions(changes.options.currentValue, container));\n        }), takeUntil(this.destroy$))\n            .subscribe(animationItem => {\n            this.animationItem$.next(animationItem);\n        });\n    }\n    destroyAnimation() {\n        const animationItem = this.animationItem$.getValue();\n        // The `ng-lottie` component or the `lottie` directive can be destroyed\n        // before the `animationItem` is set, thus it will fail with\n        // `Cannot read property 'destroy' of null`.\n        // Potentially it can happen if the directive gets destroyed before change\n        // detection is run.\n        if (animationItem === null) {\n            return;\n        }\n        // `destroy()` will remove all events listeners.\n        animationItem.destroy();\n        this.animationItem$.next(null);\n    }\n}\n/** @nocollapse */ /** @nocollapse */ BaseDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: BaseDirective, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: AnimationLoader }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ /** @nocollapse */ BaseDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: BaseDirective, selector: \"[lottie]\", inputs: { options: \"options\", containerClass: \"containerClass\", styles: \"styles\" }, outputs: { animationCreated: \"animationCreated\", complete: \"complete\", loopComplete: \"loopComplete\", enterFrame: \"enterFrame\", segmentStart: \"segmentStart\", configReady: \"configReady\", dataReady: \"dataReady\", domLoaded: \"domLoaded\", destroy: \"destroy\", error: \"error\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: BaseDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[lottie]' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: AnimationLoader }];\n    }, propDecorators: { options: [{\n                type: Input\n            }], containerClass: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], animationCreated: [{\n                type: Output\n            }], complete: [{\n                type: Output\n            }], loopComplete: [{\n                type: Output\n            }], enterFrame: [{\n                type: Output\n            }], segmentStart: [{\n                type: Output\n            }], configReady: [{\n                type: Output\n            }], dataReady: [{\n                type: Output\n            }], domLoaded: [{\n                type: Output\n            }], destroy: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }] } });\n\nclass LottieDirective extends BaseDirective {\n    constructor(ngZone, platformId, host, animationLoader) {\n        super(ngZone, platformId, animationLoader);\n        this.host = host;\n    }\n    ngOnChanges(changes) {\n        super.loadAnimation(changes, this.host.nativeElement);\n    }\n}\n/** @nocollapse */ /** @nocollapse */ LottieDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieDirective, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: i0.ElementRef, self: true }, { token: AnimationLoader }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ /** @nocollapse */ LottieDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: LottieDirective, selector: \"[lottie]\", usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[lottie]' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i0.ElementRef, decorators: [{\n                        type: Self\n                    }] }, { type: AnimationLoader }];\n    } });\n\nclass LottieComponent extends BaseDirective {\n    constructor(ngZone, platformId, animationLoader) {\n        super(ngZone, platformId, animationLoader);\n        this.width = null;\n        this.height = null;\n        this.container = null;\n    }\n    ngOnChanges(changes) {\n        super.loadAnimation(changes, this.container.nativeElement);\n    }\n}\n/** @nocollapse */ /** @nocollapse */ LottieComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieComponent, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }, { token: AnimationLoader }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ /** @nocollapse */ LottieComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: LottieComponent, selector: \"ng-lottie\", inputs: { width: \"width\", height: \"height\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `, isInline: true, directives: [{ type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ng-lottie',\n                    template: `\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: AnimationLoader }];\n    }, propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { static: true }]\n            }] } });\n\nclass LottieModule {\n    static forRoot(options) {\n        return {\n            ngModule: LottieModule,\n            providers: [\n                AnimationLoader,\n                {\n                    provide: LOTTIE_OPTIONS,\n                    useValue: options,\n                },\n            ],\n        };\n    }\n}\n/** @nocollapse */ /** @nocollapse */ LottieModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ LottieModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieModule, declarations: [BaseDirective, LottieDirective, LottieComponent], imports: [CommonModule], exports: [BaseDirective, LottieDirective, LottieComponent] });\n/** @nocollapse */ /** @nocollapse */ LottieModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [BaseDirective, LottieDirective, LottieComponent],\n                    exports: [BaseDirective, LottieDirective, LottieComponent],\n                }]\n        }] });\n\nclass CacheableAnimationLoader extends AnimationLoader {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    ngOnDestroy() {\n        this.cache.clear();\n    }\n    loadAnimation(options) {\n        return this.player$.pipe(map(player => {\n            const animationItem = this.createAnimationItem(player, this.transformOptions(options));\n            this.awaitConfigAndCache(options, animationItem);\n            return animationItem;\n        }));\n    }\n    awaitConfigAndCache(options, animationItem) {\n        if (this.isAnimationConfigWithPath(options)) {\n            // Don't wait for the `config_ready` event if it has been cached previously.\n            if (this.cache.has(options.path)) {\n                return;\n            }\n            animationItem.addEventListener('config_ready', () => {\n                // See the comments below on why we're storing the animation data as a string.\n                this.cache.set(options.path, JSON.stringify(animationItem['animationData']));\n            });\n        }\n    }\n    transformOptions(options) {\n        if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {\n            return Object.assign(Object.assign({}, options), { path: undefined, \n                // Caretaker note: `lottie-web` cannot re-use the `animationData` object between animations, and we\n                // have to retrieve a new object each time an animation is created.\n                // https://github.com/airbnb/lottie-web#html\n                // See comments for the `animationData` property.\n                animationData: JSON.parse(this.cache.get(options.path)) });\n        }\n        else {\n            return options;\n        }\n    }\n    isAnimationConfigWithPath(options) {\n        return typeof options.path === 'string';\n    }\n}\n/** @nocollapse */ /** @nocollapse */ CacheableAnimationLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CacheableAnimationLoader, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ CacheableAnimationLoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CacheableAnimationLoader });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: CacheableAnimationLoader, decorators: [{\n            type: Injectable\n        }] });\n\nclass LottieCacheModule {\n    static forRoot() {\n        return {\n            ngModule: LottieCacheModule,\n            providers: [\n                {\n                    provide: AnimationLoader,\n                    useClass: CacheableAnimationLoader,\n                },\n            ],\n        };\n    }\n}\n/** @nocollapse */ /** @nocollapse */ LottieCacheModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieCacheModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ LottieCacheModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieCacheModule });\n/** @nocollapse */ /** @nocollapse */ LottieCacheModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieCacheModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieCacheModule, decorators: [{\n            type: NgModule\n        }] });\n\nfunction transformAnimationFilenameToKey(animation) {\n    const [animationName] = animation.split('.json');\n    return `animation-${animationName}`;\n}\n\nclass LottieTransferState {\n    constructor(transferState) {\n        this.transferState = transferState;\n    }\n    get(animation) {\n        const animationKey = transformAnimationFilenameToKey(animation);\n        const stateKey = makeStateKey(animationKey);\n        return this.transferState.get(stateKey, null);\n    }\n}\n/** @nocollapse */ /** @nocollapse */ LottieTransferState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieTransferState, deps: [{ token: i1.TransferState }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ LottieTransferState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieTransferState, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: LottieTransferState, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.TransferState }]; } });\n\n/**\n * The public api for consumers of ngx-lottie\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationLoader, BaseDirective, LottieCacheModule, LottieComponent, LottieDirective, LottieModule, LottieTransferState, transformAnimationFilenameToKey };\n"]},"metadata":{},"sourceType":"module"}